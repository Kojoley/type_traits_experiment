#==============================================================================
#   Copyright (c) 2016-2019 Nikita Kniazev
#
#   Use, modification and distribution is subject to the Boost Software
#   License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
#   http://www.boost.org/LICENSE_1_0.txt)
#==============================================================================

language: cpp

sudo: false

addon_shortcuts:
  clang-7: &clang-7
    apt:
      sources:
        - llvm-toolchain-xenial-7
      packages:
        - clang-7
        - libc++-7-dev
        - libc++abi-7-dev

  gcc-8: &gcc-8
    apt:
      sources:
        - ubuntu-toolchain-r-test
      packages:
        - g++-8

os: linux
dist: xenial

env:
  global:
    - BRANCH=develop
    - BOOST_ROOT=$HOME/boost
    - BOOST_BUILD_PATH=$HOME/build-boost
    - STD=11

matrix:
  include:
    - { env: 'PROJECT=bimap', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=container', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=geometry', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=hana', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=hof', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=interprocess', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=intrusive', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=metaparse', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=move', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=mpi', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=mpl', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=msm', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=multiprecision', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=property_map', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=proto', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=python', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=range', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=serialization', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=signals', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=signals2', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=spirit', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=statechart', compiler: gcc-8, addons: *gcc-8 }
    - { env: 'PROJECT=type_traits', compiler: gcc-8, addons: *gcc-8 }

cache: ccache

before_install:
  - export PATH=$BOOST_ROOT:$PATH

  # Sadly git's --shallow-submodules has hardcoded depth of 1 commit
  # Patch the git binary with a little more depth to deal with boost-commitbot's lag
  - sed 's/--depth=1/--depth=9/g' `which git` > ~/git && chmod +x ~/git

  # Checkout Boost
  - ~/git clone -j10 --branch=$BRANCH --depth=1 --quiet
      --recurse-submodules=":(exclude)libs/$PROJECT" --shallow-submodules
      https://github.com/boostorg/boost.git $BOOST_ROOT
  - pushd $BOOST_ROOT
  # apply the PR
  - PATCH_URL=https://github.com/boostorg/type_traits/pull/134.patch;
    curl -sL $PATCH_URL | patch -fsup 1 -d libs/type_traits
  # Remove the empty folder
  - rm -rf libs/$PROJECT
  - ./bootstrap.sh --with-toolset=clang
    || ( echo === bootstrap.log === ; cat bootstrap.log ; exit 1 ; )

  - cd libs/$PROJECT/test

script:
  - b2 -j`nproc` link=shared threading=multi variant=release
      toolset=$TRAVIS_COMPILER cxxstd=$STD
